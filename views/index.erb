<!DOCTYPE html>
<html>
  <head>
    <title>Veto Vote - Create a Poll</title>
    <%= head_tags %>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <h1>Create a poll</h1>
      </div>

      <form id="create" action="/new" method="POST">
        <div class="row">
          <div class="six columns">
            Poll Title
          </div>
          <div class="six columns in">
            <input type="text" name="title" id="title" autocomplete="off" placeholder="Name of your poll">
          </div>
        </div>

        <div class="row">
          <div class="three columns">
            Poll URL name
          </div>
          <div class="three columns right">
            <span class="url"><span>
          </div>
          <div class="six columns in">
            <input type="text" name="code" id="code" autocomplete="off" placeholder="">
          </div>
        </div>

        <div class="row">
          <div class="twelve columns" style="margin-bottom: 1em">
            <input type="checkbox" checked id="other" name="other">
            <label for="other" style="cursor: pointer; user-select: none;">
              Allow 'other' option, i.e. alternative choices?
            </label>
          </div>
        </div>


        <div class="row">
          <div class="twelve columns">
            Primary Options/Choices:
            <ul id="options">
              <div class="option">
                <input type="text" autocomplete="off" name="addition" id="addition" placeholder="...">
                <input type="button" class="add-option" value="Add option">
              </div>
            </ul>
          </div>
        </div>


        <br />
        <input id="submit-poll" type="submit" name="submit" value="Make Poll">
      </form>
    </div>


    <script src="/main.js"></script>
    <script src="/new.js"></script>
    <script>
      let editing = NaN;

      const add_list = option => {
        $('#addition').val('');
        let adder = $(".option").detach();
        $("#options")
          .append(`
            <li class="option-item">
              <span class="value">${option}</span>
              <div class="symbols">
                <i class="option-edit far fa-edit"></i>
                <i class="option-remove fas fa-times"></i>
              </div>
            </li>
          `)
          .append(adder);
        $('#addition').focus().select();
      };


      $('#options').on('click', '.option-remove', e => {
        const li = $(e.target).closest('li');
        li.slideUp(100, function() { $(this).remove(); });
        console.warn(li[0], 'Element been removed!');
      });

      const save = () => {
        const inputs = $('#options li').children('input');
        let values = Array(...$('#options li span')
                      .filter((i, e) => e.style.display !== 'none')
                      .map((i, e) => e.innerHTML));
        console.log(values);

        let bad_input = null;
        inputs.each(function() {
          const value = this.value;
          if (value.length === 0) {
            issue(ISSUE.FATAL, `Cannot leave new value empty. Delete it if you don't want it.`);
            bad_input = $(this);
            return;
          }
          if (values.includes(value)) {
            issue(ISSUE.FATAL, `Cannot have duplicate (primary) options/choices!`);
            bad_input = $(this);
            return;
          }

          $(this).parent('li').removeClass('dark-option');
          $(this).siblings('span').show().text(value);
          $(this).siblings('.symbols').find('.option-edit')
            .removeClass('fa-save')
            .addClass('fa-edit');
          this.remove();
        });

        if (bad_input !== null) {
          bad_input.attention();
          return false;
        }

        let value = $("#addition").val().trim();

        if (values.includes(value)) {
          issue(ISSUE.FATAL, `Cannot have duplicate (primary) options/choices!`);
          $('#addition').attention();
          return false;
        }


        if (value.length > 0) add_list(value);
        return true;
      };

      $(document).on('click', e => {
        if (!( $(e.target).hasClass('editor')
            || $(e.target).hasClass('option-item')
            || $(e.target).hasClass('fa-save')
            || $(e.target).hasClass('value')
          )) {
          save();
          editing = NaN;
        }
      });

      const edit_mode = li => {
        const span = li.find('span');
        span.hide();
        li.addClass('dark-option');
        li.find('.option-edit')
          .removeClass('fa-edit')
          .addClass('fa-save');
        li.prepend(`<input class="editor" type="text" value="${span.text()}" />`);
        li.find('input').focus().select();
      };

      $('#options').on('click', 'li', e => {
        if (e.target.nodeName === 'INPUT') return;
        let li = $(e.currentTarget);
        save();

        if (editing !== li.index()) {
          editing = li.index();
          edit_mode(li);
        } else {
          editing = NaN;
        }
      });

      $(document).on('keypress', '.editor', key => {
        if (key.which === 13 || key.which === 10) {
          key.preventDefault();
          save();
          editing = NaN;
        }
      });

      $("#addition").on('keypress', key => {
        let value = $("#addition").val().trim();
        if (key.which === 13 || key.which === 10) {
          if (value.length === 0) {
            return $('#addition').attention();
          }
          key.preventDefault();
          save();
        }
      });
      $('.add-option').click(() => {
        if ($('#addition').val().length === 0) {
          $('#addition').attention();
          return;
        }
        save();
      });
    </script>
    <script>
      $("#title").on('input', () => {
        $("#code").val(encodeURIComponent($("#title").val().toLowerCase().replace(/\s|\\|\//g, '-')));
      });

      $('#code')[0].addEventListener('keyup', e => {
        $("#code").val(encodeURIComponent($("#code").val().replace(/[^A-Za-z\d\-\.\!\']/g, '-')));
      });
    </script>
  </body>
</html>
